version: '3.9'
services:

  rabbitmq:
    image: 'rabbitmq:3.10-management-alpine'
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - network
  
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PORT: 80
      AUTH_TOKEN: local
      TWO_FA: local_2fa
      CLOUDAMQP_URL: 'amqp://rabbitmq?connection_attempts=5&retry_delay=5'
      ASYNC_DB_URL : 'postgresql+asyncpg://postgres_user:postgres_pass@db:5432/postgres'
      REDIS_URL : 'cache'
      REDIS_PORT : '6379'
      REDIS_CACHE_INVALIDATION_IN_SECONDS : '2'
      ENABLE_EVENTS : 'True'
      DEBUG_LOGGER_LEVEL : 'True'
      DEBUG_REST : 'True'
      CLOUDAMQP_RETRIES: '6'
      CLOUDAMQP_TIMEOUT: '10'
      REDIS_RETRIES: '5'
      REDIS_TIMEOUT: '2'
    ports:
      - '8080:80' #localhost:Dockerfile
    volumes:
      - .:/app
    networks:
      - network

  cache:
    image: 'redis:7.0-alpine'
    ports:
      - '6379:6379'
    volumes:
      - cache:/data
    networks:
      - network

  db:
    image: postgres:14.5-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres_user
      - POSTGRES_PASSWORD=postgres_pass
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - network

networks:
  network: {}

volumes:
  db:
  cache:
